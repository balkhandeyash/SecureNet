{"ast":null,"code":"var _jsxFileName = \"/Users/yashbalkhande/pythonreactintegration/final-year-project/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.css\";\nimport JobDetailsCard from \"./JobDetailsCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const jobsPerPage = 15;\n  const jobListingRef = useRef(null);\n\n  // Calculate the index range for jobs on the current page\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://rapidapi.com/mantiks-mantiks-default/api/indeed12/\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-RapidAPI-Key\": \"d5426ca53amshe5ccee5cb130524p125d11jsn9a55bc5d61af\" // Replace with your RapidAPI key\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data); // Assuming the API response is an array of jobs\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n  const handlePreviousPage = () => {\n    setCurrentPage(prevPage => prevPage - 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n  const handleJobClick = jobId => {\n    setSelectedJob(jobId);\n  };\n  const handleDocumentClick = event => {\n    if (jobListingRef.current && !jobListingRef.current.contains(event.target)) {\n      // Clicked outside the job listing container\n      setSelectedJob(null);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"click\", handleDocumentClick);\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: jobListingRef,\n      className: `job-listing-container ${selectedJob ? \"zoomed\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-grid\",\n        children: currentJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `job-card ${selectedJob === job.id ? \"selected\" : \"\"}`,\n          onClick: () => handleJobClick(job.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-description\",\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Page ${currentPage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: indexOfLastJob >= jobs.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(JobDetailsCard, {\n      job: jobs.find(job => job.id === selectedJob),\n      onClose: () => setSelectedJob(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ffspH9yN0foaNY0IPLl4TWv4xMw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","JobDetailsCard","jsxDEV","_jsxDEV","Dashboard","_s","jobs","setJobs","currentPage","setCurrentPage","selectedJob","setSelectedJob","jobsPerPage","jobListingRef","indexOfLastJob","indexOfFirstJob","currentJobs","slice","fetchData","response","fetch","method","headers","ok","data","json","console","error","handleNextPage","prevPage","handlePreviousPage","handleJobClick","jobId","handleDocumentClick","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","job","id","onClick","title","company","location","description","disabled","length","find","onClose","_c","$RefreshReg$"],"sources":["/Users/yashbalkhande/pythonreactintegration/final-year-project/frontend/src/components/Dashboard.js"],"sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.css\";\nimport JobDetailsCard from \"./JobDetailsCard.js\";\n\nconst Dashboard = () => {\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const jobsPerPage = 15;\n  const jobListingRef = useRef(null);\n\n  // Calculate the index range for jobs on the current page\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://rapidapi.com/mantiks-mantiks-default/api/indeed12/\",\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"X-RapidAPI-Key\":\n                \"d5426ca53amshe5ccee5cb130524p125d11jsn9a55bc5d61af\", // Replace with your RapidAPI key\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data); // Assuming the API response is an array of jobs\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handleJobClick = (jobId) => {\n    setSelectedJob(jobId);\n  };\n\n  const handleDocumentClick = (event) => {\n    if (\n      jobListingRef.current &&\n      !jobListingRef.current.contains(event.target)\n    ) {\n      // Clicked outside the job listing container\n      setSelectedJob(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleDocumentClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n\n  return (\n    <div className=\"Dashboard-body\">\n      <h2>Job Listings</h2>\n      <div\n        ref={jobListingRef}\n        className={`job-listing-container ${selectedJob ? \"zoomed\" : \"\"}`}\n      >\n        <div className=\"job-grid\">\n          {currentJobs.map((job) => (\n            <div\n              key={job.id}\n              className={`job-card ${selectedJob === job.id ? \"selected\" : \"\"}`}\n              onClick={() => handleJobClick(job.id)}\n            >\n              <h3>{job.title}</h3>\n              <p>{job.company}</p>\n              <p>{job.location}</p>\n              <p className=\"job-description\">{job.description}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"pagination\">\n          <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n            Previous\n          </button>\n          <span>{`Page ${currentPage}`}</span>\n          <button\n            onClick={handleNextPage}\n            disabled={indexOfLastJob >= jobs.length}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n\n      {selectedJob && (\n        <JobDetailsCard\n          job={jobs.find((job) => job.id === selectedJob)}\n          onClose={() => setSelectedJob(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}